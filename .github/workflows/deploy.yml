name: Deploy to VPS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production-ionos
    steps:
    
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18 

      - name: Install node modules
        run: npm install
        
      - name: Create .env.production file from GitHub Secrets
        run: |
          echo "STRIPE_PK=${{ secrets.STRIPE_PK }}" >> .env.production
          echo "STRIPE_SK=${{ secrets.STRIPE_SK }}" >> .env.production
          echo "STRIPE_WBH_SECRET=${{ secrets.STRIPE_WBH_SECRET }}" >> .env.production
          echo "BASE_URL=${{ vars.BASE_URL }}" >> .env.production
          echo "MONGO_CONN_STR=${{ secrets.MONGO_CONN_STR }}" >> .env.production
          echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env.production
          echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> .env.production
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env.production
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env.production
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.production

      - name: Build
        run: NODE_ENV=production npm run build

      - name: Transfer Backend to VPS
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          target: /web/inscription-evenements/
          source: "backend/*,.env.production"
          overwrite: true

      - name: Transfer Frontend to VPS
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          target: /web/inscription-evenements/
          source: frontend/dist/*
          overwrite: true
          strip_components: 1
      
      - name: Transfer Nginx Config to VPS
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          target: /etc/nginx/sites-available/
          source: nginx.conf
          overwrite: true

      - name: Reload Backend on VPS
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /web/inscription-evenements/backend/
            cp ../.env.production .
            npm install --omit=dev
            if pm2 describe inscription-backend > /dev/null; then
              NODE_ENV=production pm2 restart inscription-backend --update-env
            else
              NODE_ENV=production pm2 start /web/inscription-evenements/backend/dist/main.js --name inscription-backend
            fi
            pm2 save
      
      - name: Reload Frontend on VPS
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            rm -rf /web/inscription-evenements/frontend
            mv /web/inscription-evenements/dist /web/inscription-evenements/frontend
            sudo chown -R www-data:www-data /web/inscription-evenements/frontend
            sudo chmod -R 755 /web/inscription-evenements/frontend
      
      - name: Reload Nginx on VPS
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            mv /etc/nginx/sites-available/nginx.conf /etc/nginx/sites-available/inscription-evenements.conf
            ln -sf /etc/nginx/sites-available/inscription-evenements.conf /etc/nginx/sites-enabled/inscription-evenements.conf
            nginx -s reload
